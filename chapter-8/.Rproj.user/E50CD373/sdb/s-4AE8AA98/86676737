{
    "collab_server" : "",
    "contents" : "set.seed(1)\nx= matrix(rnorm(20*2),ncol=2)\ny=c(rep(-1,10),rep(1,10))\nx[y==1,]<-x[y==1,]+1\nplot(x, col=(3-y))\nhist(x)\n\ndat = data.frame(x=x,y=as.factor(y))\ndat\nlibrary(e1071)\nsvmfit = svm(y~.,data=dat,kernel=\"linear\",cost=10,scale=T)\nplot(svmfit,dat)\nsummary(svmfit)\nnames(svmfit)\n\nset.seed(1)\ntune.test = tune(svm,y~.,data = dat,kernel=\"linear\",ranges = list(cost = c(0.001,0.01,0.1,1,5,10,100)))\nsummary(tune.test)\ntunemodel.best = tune.test$best.model\n\n#generating a test dataset\nxtest = matrix(rnorm(20*2),ncol=2)\nytest = sample(c(-1,1),20,rep = T)\n#this line is written to make the 2 classes linearly seperable\nxtest[ytest==1,]=xtest[ytest==1,]+1\ntest.data4 = data.frame(x=xtest,y=as.factor(ytest))\n\n#predictiom\nypred = predict(tunemodel.best,test.data4)\ntable(ypred,test.data4$y)\n\nx[y==1,]=x[y==1,]+.5\ndata2 = data.frame(x=x,y=as.factor(y))\nsvmfit = svm(y~.,data = data2,kernel='linear',cost = 1e5)\nplot(svmfit,data2)\n",
    "created" : 1458929178310.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1990738132",
    "id" : "86676737",
    "lastKnownWriteTime" : 1458945507,
    "last_content_update" : 1458977772485,
    "path" : "F:/Data Science/chapter-8/svm.R",
    "project_path" : "svm.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}